name: Publish Package

on: workflow_dispatch

jobs:
    build-and-publish:
        name: Build and Publish Ballerina Package
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2
              with:
                  ref: 'main'

            - name: Configure Git
              run: |
                  git config --global user.name ${{ secrets.USERNAME }}
                  git config --global user.email ${{ secrets.EMAIL }}

            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.x'

            - name: Install Python Packages
              run: pip install semver

            - name: Retrieve the Version
              run: echo "VERSION=$((grep -w 'version' | cut -d= -f2) < Ballerina.toml | rev | tr -d '\"' | cut --complement -d- -f1- | xargs)" >> $GITHUB_ENV

            - name: Move to Stable Version
              run: |
                  echo "${VERSION}"
                  git checkout -b release-$VERSION
                  sed -i "s/version = \(.*\)-SNAPSHOT/version = \1/g" Ballerina.toml
                  git add Ballerina.toml

                  git commit -m "Bump to version ${VERSION}"
                  git tag "v$VERSION"

            - name: Ballerina Build
              uses: ballerina-platform/ballerina-action@master
              with:
                  args:
                      pack

            - name: Push Ballerina Package
              uses: ballerina-platform/ballerina-action/@master
              with:
                  args: push
              env:
                  BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.CENTRAL_ACCESS_TOKEN }}

            - name: Create GitHub Release
              run: |
                  gh release create v$VERSION --title "Prettify Version $VERSION"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


            - name: Post Release Updates
              run: python resources/release/release.py

            - name: Commit Files
              run: |
                  git commit -am "[AUTOMATED] Update Version After the Release ${VERSION}"

            -   name: GitHub Release and Release Sync PR
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: |
                    gh pr create --title "[Automated] Sync master after $VERSION release" --body "Sync master after $VERSION release"
